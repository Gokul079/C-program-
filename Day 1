1st program array

#include<stdio.h>
int main()
{
int n,a[n],i;
scanf("%d ",&n);
for(i=0;i<n;i++)
    scanf("%d",&a[i]);
for(i=n-1;i>=0;i--)
    printf("%d ",a[i]);



    return 0;
}


2nd program

#include<stdio.h>
int main()
{

  int num;
    scanf("%d",&num);
    int arr[num],cz=0;
    for(int count=0;count<num;count++)
    {
    scanf("%d",&arr[num]);
    if(arr[num]==0) cz++;
    }
    printf("0:%d 1:%d",cz,num-cz);
    return 0;
}

3rd program

#include<stdio.h>
int main()
{
int num,key,min=0;
scanf("%d ",&num);
int arr[num];
for(int count=0;count<num;count++)
    scanf("%d",&arr[count]);
scanf("%d",&key);
for(int count=0;count<num;count++)
{
  if(arr[count]<key)
       min++;
}
printf("%d",min);
return 0;
}

4th program

#include<stdio.h>
int main()
{
int num;
scanf("%d ",&num);
int arr[num];
for(int count=0;count<num;count++)
    scanf("%d",&arr[count]);
for(int count=0;count<num;count++)
{
  for (int j = count + 1; j < num; j++) 
    {
        if(arr[count]==arr[j])
     printf("%d ",arr[count]);
    }
}
return 0;
}

5th program

#include<stdio.h>
int main(){
    int num,search,count;
    scanf("%d",&num);
    int arr[num];
    for(count=0;count<num;count++)
        scanf("%d",&arr[count]);
    scanf("%d",&search);
   for(count=0;count<num;count++)
   {
       if(search==arr[count])
       {
         printf("%d",count);
         break;
       }
        else if(count==num-1)
        printf("-1");
   }


    return 0;
}

6th program

#include <stdio.h>

int main()
{
    int noe;  
    scanf("%d", &noe);  
    int arr[noe];  
    for(int i = 0; i < noe; i++)  
        scanf("%d", &arr[i]);  
    for(int i = 0; i < noe; i++)  
    {  
        int min = arr[i];  
        for(int j = i + 1; j < noe; j++)  
        {  
            if(arr[j] < min)  
            {  
                int temp = arr[j];  
                arr[j] = arr[i];  
                arr[i] = temp;  
            }  
        }  
    }  
    for(int i = 0; i < noe; i++)  
    {  
        printf("%d ", arr[i]);  
    }  
  

    return 0;
}

7th program

#include <stdio.h>

int main()
{
     int N, index, sum=0;
    scanf("%d",&N);
    int arr[N];
    for(index=0;index<N;index++)
{       scanf("%d",&arr[index]);
        sum+=arr[index];
 }   for(index=0;index<N;index++)
    {
        sum-=arr[index];
        arr[index]=sum;
    }
 for(index=0;index<N;index++)
        printf("%d ",arr[index]);
    return 0;
}
8th program

#include<stdio.h>
int main()
{
    int N, start, end, index, temp;
    scanf("%d",&N);
    int arr[N];
    for(index=0;index<N;index++)
            scanf("%d",&arr[index]);
     start = 0;
    end = N - 1;
    while (start < end) {
        temp = arr[start];
        arr[start] = arr[end];
        arr[end] = temp;
        start++;
        end--;
    }
  for(index=0;index<N;index++)
    printf("%d ",arr[index]);
    return 0;
}

string

#include <stdio.h>

int main()
{
   char str[50];
   scanf("%c",str);
   printf("%s",str);

    return 0;
}

2

#include <stdio.h>

int main()
{
   char str[50];
   fgets(str,sizeof(str),stdin);
   puts(str);

    return 0;
}


3

#include <stdio.h>
#include<string.h>

int main()
{
   char str[50];
   fgets(str,sizeof(str),stdin);
   puts(str);
   printf("%d",(strlen(str))-1);

    return 0;
}


4

#include <stdio.h>
#include<string.h>

int main()
{
   char str[50];
   int index=0;
   fgets(str,sizeof(str),stdin);
   puts(str);
   while(str[index]!='\0')
   index++;
   printf("%d",index-1);

    return 0;
}

5

#include <stdio.h>
#include<string.h>

int main()
{
   char str[50];
   fgets(str,sizeof(str),stdin);
   puts(str);
   int index;
   for(index=0;str[index]!='\0';index++);
   printf("%d",index);

    return 0;
}

6

#include <stdio.h>
#include<string.h>

int main()
{
   char str[50];
   fgets(str,sizeof(str),stdin);
   puts(str);
   int index=0,alpha=0,dig=0,special=0;
   while(str[index]!='\0')
   {
       if((str[index]>='a' && str[index]<='z') ||  (str[index]>='a' && str[index]<='z'))
       alpha++;
       else if(str[index]>='0' && str[index]<='9')
       dig++;
       else
       special++;
       index++;
   }
   printf("%d alpha \n %d digit \n %d special \n",alpha,dig,special-1);

    return 0;
}


vowels & consonants

#include <stdio.h>
#include<string.h>

int main()
{
   char str[50];
   fgets(str,sizeof(str),stdin);
   puts(str);
   int index=0,vowel=0,consonant=0;
   while(str[index]!='\0')
   {
       if((str[index]>='a' && str[index]<='z') ||  (str[index]>='a' && str[index]<='z'))
       {
           if(str[index]=='a'|| str[index]=='e'||str[index]=='i'||str[index]=='o'||str[index]=='u'|| str[index]=='A'|| str[index]=='E'||str[index]=='I'||str[index]=='O'||str[index]=='U')
           vowel++;
           else
           consonant++;
       }
       
      index++;
   }
   printf("%d vowel \n %d consonant \n",vowel,consonant);

    return 0;
}

str upper

#include <stdio.h>
#include<string.h>

int main()
{
   char str[50];
   fgets(str,sizeof(str),stdin);
  int index=0;
   while(str[index]!='\0')
   {
       if(str[index]>='a' && str[index]<='z')
       str[index]-=32;
       index++;
   }
   printf("%s",str);

    return 0;
}

str lower

#include <stdio.h>
#include<string.h>

int main()
{
   char str[50];
   fgets(str,sizeof(str),stdin);
  int index=0;
   while(str[index]!='\0')
   {
       if(str[index]>='A' && str[index]<='Z')
       str[index]+=32;
       index++;
   }
   printf("%s",str);

    return 0;
}

str toggle

#include <stdio.h>
#include<string.h>

int main()
{
   char str[50];
   fgets(str,sizeof(str),stdin);
  int index=0;
   while(str[index]!='\0')
   {
       if(str[index]>='a' && str[index]<='z')
       str[index]-=32;
       else if(str[index]>='A' && str[index]<='Z')
       str[index]+=32;
       index++;
   }

no of words


#include <stdio.h>
#include<string.h>

int main()
{
   char str[50];
   fgets(str,sizeof(str),stdin);
  int index=0,countofwords=0;
   while(str[index]!='\0')
   {
       if(str[index]==' ' ||  str[index]=='\t' || str[index]=='\n')
           countofwords++;
           index++;
   }
   printf("%d",countofwords);

    return 0;
}
   printf("%s",str);

    return 0;
}

string occurance

#include <stdio.h>

int main()
{
    char str[]="rvsctv";
    char alphabet[123]={0};
    int index=0;
    while(str[index]!='\0')
    {
        alphabet[str[index]]++;
        index++;
    }
    for(index=0;index<123;index++)
    {
        if(alphabet[index]!=0)
        printf("\n%c - times %d",index,alphabet[index]);
    }

    return 0;
}


repearing characters

#include <stdio.h>

int main()
{
     char str[50];
    fgets(str,sizeof(str),stdin);
    char alphabet[123]={0};
    int index=0;
    while(str[index]!='\0')
    {
        alphabet[str[index]]++;
        index++;
    }
    for(index=0;index<123;index++)
    {
        if(alphabet[index]>1)
        printf("\n%c - times %d",index,alphabet[index]);
    }

    return 0;
}

sort the characters without repetition

#include <stdio.h>

int main()
{
     char str[50];
     fgets(str,sizeof(str),stdin);
    char alphabet[123]={0};
    int index=0;
    while(str[index]!='\0')
    {
        alphabet[str[index]]++;
        index++;
    }
    for(index=0;index<123;index++)
    {
        if(alphabet[index]!=0)
        printf("%c",index);
    }

    return 0;
}

character check

#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {

    char str[20];
     fgets(str,sizeof(str),stdin);
          int i=0;
          if(str[i]>='A'  && str[i]<='Z')
          {
              printf("%c is uppercase letter",str[i]);
          }
          else
          {
              printf("%c is lowercase letter",str[i]);
          }
    return 0;
}

occurance of character in a string

import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

    public static void main(String[] args) {
        Scanner s=new Scanner(System.in);
        char l=s.next().charAt(0);
        String str=s.nextLine();
        int len=str.length();
        int count=0;
        char[] ch=str.toCharArray();
        for(int index=0;index<len;index++)
        {
                if(l==ch[index])
                {
                    count++;
                }
        }
        System.out.println(count);
    }
}

